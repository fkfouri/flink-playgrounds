################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

version: "2.1"
services:
  base_flink:
    build:
      context: ../docker/flink/
      dockerfile: base.Dockerfile
    image: apache/fk-flink-base

  client:
    build: ../docker/ops-playground-image
    # image: apache/flink-ops-playground:1-FLINK-1.16-scala_2.12
    image: apache/flink-ops-playground:1-FLINK-1.18-scala_2.12 # by FK
    # command: "flink run -d /opt/ClickCountJob.jar --bootstrap.servers kafka:9092 --checkpointing --event-time"

    depends_on:
      - jobmanager
      - kafka
    working_dir: /opt/flink # by FK
    volumes:
      - ./conf:/opt/flink/conf
      - flink_data:/tmp/
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  # clickevent-generator:
  #   # image: apache/flink-ops-playground:1-FLINK-1.16-scala_2.12
  #   image: apache/flink-ops-playground:1-FLINK-1.18-scala_2.12 # by FK
  #   command: "java -classpath /opt/ClickCountJob.jar:/opt/flink/lib/* org.apache.flink.playgrounds.ops.clickcount.ClickEventGenerator --bootstrap.servers kafka:9092 --topic input"
  #   depends_on:
  #     - kafka1

  jobmanager:
    # image: apache/flink:1.18-scala_2.12-java11
    image: apache/fk-flink-base # by FK
    command: "jobmanager.sh start-foreground"
    ports:
      - 8081:8081
    volumes:
      - ./conf:/opt/flink/conf
      - flink_data:/tmp/
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  taskmanager:
    # image: apache/flink:1.18-scala_2.12-java11
    image: apache/fk-flink-base # by FK
    depends_on:
      - jobmanager
    command: "taskmanager.sh start-foreground"
    volumes:
      - ./conf:/opt/flink/conf
      - flink_data:/tmp/
    environment: # https://nightlies.apache.org/flink/flink-docs-release-1.20/docs/deployment/config/
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  # zookeeper:
    # image: wurstmeister/zookeeper:3.4.6

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    # hostname: zookeeper1
    # container_name: zookeeper1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888


  # kafka:
  #   image: wurstmeister/kafka:2.13-2.8.1
  #   working_dir: /opt/kafka/bin # by FK
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_CREATE_TOPICS: "input:2:1, output:2:1"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_BROKER_ID: 1 # by FK
  #   ports:
  #     - 9092:9092
  #     - 9094:9094
  kafka:
    image: confluentinc/cp-kafka:latest
    # hostname: kafka1
    # container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://localhost:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper

  python: # by FK  
    build: ../docker/python/
    depends_on:
      - jobmanager
      - kafka
    working_dir: /app
    environment:
      - BOOTSTRAP_SERVER=host.docker.internal:29092    
volumes:
  flink_data:
